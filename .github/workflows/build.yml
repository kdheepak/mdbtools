name: build
on: [ push ]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ clang, gcc, gcc-9, gcc-10 ]
        glib: [ enable-glib, disable-glib ]
    steps:
      - name: Install packages
        run: sudo apt install gettext
      - uses: actions/checkout@v2
      - name: Autoconf
        run: autoreconf -i -f
      - name: Configure
        run: ./configure --disable-silent-rules --${{ matrix.glib }} --with-unixodbc=/usr --prefix="`pwd`/installation"
        env:
          CC: ${{ matrix.compiler }}
      - name: Make
        run: make
      - name: Packaging binary
        shell: bash
        run: |
          cd `pwd`/installation/
          tar czvf mdbtools-linux.tar.gz *
      - name: Releasing assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mdbtools/installation/mdbtools-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        compiler: [ clang, gcc ]
        glib: [ enable-glib, disable-glib ]
    steps:
      - name: Install packages
        run: brew install bison gawk automake
      - uses: actions/checkout@v2
      - name: Autoconf
        run: autoreconf -i -f
      - name: Configure
        run: ./configure --disable-silent-rules --${{ matrix.glib }} --with-unixodbc=/usr/local/opt --prefix="`pwd`/installation"
        env:
          CC: ${{ matrix.compiler }}
          YACC: /usr/local/opt/bison/bin/bison
      - name: Make
        run: make install
      - name: Packaging binary
        shell: bash
        run: |
          cd `pwd`/installation/
          tar czvf mdbtools-macos.tar.gz *
      - name: Releasing assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mdbtools/installation/mdbtools-macos.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos-iodbc:
    runs-on: macos-latest
    strategy:
      matrix:
        compiler: [ clang, gcc ]
        glib: [ enable-glib, disable-glib ]
    steps:
      - name: Remove packages
        run: brew unlink unixodbc
      - name: Install packages
        run: brew install libiodbc bison gawk automake
      - uses: actions/checkout@v2
      - name: Autoconf
        run: autoreconf -i -f
      - name: Configure
        run: ./configure --disable-silent-rules --${{ matrix.glib }} --with-iodbc=/usr/local/opt --prefix="`pwd`/installation"
        env:
          CC: ${{ matrix.compiler }}
          YACC: /usr/local/opt/bison/bin/bison
      - name: Make
        run: make install
      - name: Packaging binary
        shell: bash
        run: |
          cd `pwd`/installation/
          tar czvf mdbtools-macos-iodbc.tar.gz *
      - name: Releasing assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mdbtools/installation/mdbtools-macos-iodbc.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  windows:
    runs-on: windows-latest
    env:
      MSYSTEM: MINGW64
    steps:
      - uses: actions/checkout@v2
      - name: Autoconf
        run: C:\msys64\usr\bin\bash -c -l 'cd "$GITHUB_WORKSPACE" && autoreconf -i -f'
      - name: Configure
        run: C:\msys64\usr\bin\bash -c -l 'cd "$GITHUB_WORKSPACE" && ./configure --prefix="`pwd`/installation"'
      - name: Make
        run: C:\msys64\usr\bin\bash -c -l 'cd "$GITHUB_WORKSPACE" && make install'
      - name: Packaging binary
        shell: bash
        run: |
          cd `pwd`/installation/
          tar czvf mdbtools-windows.tar.gz *
      - name: Releasing assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mdbtools/installation/mdbtools-windows.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
